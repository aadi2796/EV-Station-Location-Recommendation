# -*- coding: utf-8 -*-
"""BUAN 6390_EV_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YhFcC7k2IJbpXzlW3xFYDVOq2KTcjtiu
"""

# Import libraries
import pandas as pd
import numpy as np
import random
from pathlib import Path
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

base_folder = Path('/content/drive/MyDrive/datasets')
data_folder = base_folder/'data'

train_df = pd.read_excel(data_folder/"Train_EV.xlsx")
test_df = pd.read_excel(data_folder/"Test_EV.xlsx")
df = pd.read_excel(data_folder/"EV_Reg_Dataset.xlsx")

train_df = train_df.drop(['ZIP'], axis =1)
test_df = test_df.drop(['ZIP'], axis =1)

train_df

test_df

df

corr = df.corr()
corr.style.background_gradient(cmap='coolwarm').set_precision(2)

x = df[['Land Area (Sq. Miles)', 'Population', 'Median Income','Registered EVs', 'Population Density']]
y = df[['EV DC Fast Count']]

x

y

x_train = train_df.iloc[:,:-1]
x_test = test_df.iloc[:,:-1]
y_train = train_df.iloc[:,-1]
y_test = test_df.iloc[:,-1]

model = LinearRegression()

model.fit(x_train, y_train)

print(model.coef_)

print(model.intercept_)

pd.DataFrame(model.coef_, x.columns, columns = ['Coeff'])

predictions = model.predict(x_test)

predictions

from sklearn.metrics import r2_score
r2_score(y_test, predictions)

1 - ( 1-model.score(x_train, y_train) ) * ( len(y_train) - 1 ) / ( len(y_train) - x_train.shape[1] - 1 )

model.score(x_train,y_train)

pred_df = pd.DataFrame({
    "Prediction": predictions
})

pred_df.to_csv("prediction.csv", index=False)

# plt.scatter(y_test, predictions)
plt.hist(y_test - predictions)

from sklearn import metrics
metrics.mean_absolute_error(y_test, predictions)

metrics.mean_squared_error(y_test, predictions)

np.sqrt(metrics.mean_squared_error(y_test, predictions))

df

df = df.drop(['State', 'ZIP'], axis =1)

df

import statsmodels.api as sm
import pandas as pd

# defining the variables
x2 = x_train
y2 = y_train
x2 = sm.add_constant(x_train)

result = sm.OLS(y2, x2).fit()

# printing the summary table
print(result.summary())

